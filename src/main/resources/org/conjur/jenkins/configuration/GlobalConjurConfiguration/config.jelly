<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core"
         xmlns:st="jelly:stapler"
         xmlns:d="jelly:define"
         xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson"
         xmlns:f="/lib/form"
         xmlns:c="/lib/credentials">

  <f:section title="${%CyberARK Secrets Manager Conjur Configuration}">
   <div id="divListAuthenticator">
        <f:entry title="${%Select Conjur Authentication Type}" name="selectAuthenticatorEntry" field="selectAuthenticatorEntryField">
            <select id="listAuthenticator" name="selectAuthenticator" class="jenkins-select_input">
                <option value="APIKey">APIKey</option>
                <option value="JWT">JWT</option>
            </select>
        </f:entry>
    </div>
    <div>
        <f:property field="conjurConfiguration" header="${%Conjur Configuration}"/>
     </div>
   </f:section>

  
  


    <div id="conjurGlobalJWTSection">
    <f:section title="${%Conjur JWT Authentication}">

        <f:entry title="${%Service Id}">
            <f:textbox field="authWebServiceId" name="authWebServiceId"/>
        </f:entry>
         <f:entry title="${%JWT Audience}">
            <f:textbox field="jwtAudience" name="jwtAudience"/>
        </f:entry>
        
        <f:entry title="${%Signing Key Lifetime In Minutes}">
            <f:number field="keyLifetimeInMinutes" name="keyLifetimeInMinutes" onkeypress='validateNumber(event)'/>
        </f:entry>
        <f:entry title="${%JWT Token Duration In Seconds}">
            <f:number field="tokenDurarionInSeconds" name="tokenDurarionInSeconds" onkeypress='validateNumber(event)'/>
        </f:entry>
        <f:entry title="${%Enable Identity Format Fields From Token}" description="DEPRECATED: If checked, populate variables available from the current context">
            <f:checkbox id="enableIdentityFormatFieldsFromToken" name="enableIdentityFormatFieldsFromToken" field="enableIdentityFormatFieldsFromToken" default="false"/>
        </f:entry>
    </f:section>
    <div id="conjurLocalTokenClaims">
    <f:validateButton title="${%JWT Token Claims}" progress="${%resolving...}"
   method="obtainJwtToken" />
    </div>
</div>

  <script type="text/javascript">

      function validateNumber(evt) {
          var theEvent = evt || window.event;

          // Handle paste
          if (theEvent.type === 'paste') {
              key = event.clipboardData.getData('text/plain');
          } else {
              // Handle key press
              var key = theEvent.keyCode || theEvent.which;
              key = String.fromCharCode(key);
          }
          var regex = /[0-9]|\./;
          if( !regex.test(key) ) {
              theEvent.returnValue = false;
              if(theEvent.preventDefault) theEvent.preventDefault();
          }
      }

      // Function to set value based on checkbox state
      //document.getElementById('listIdentityFieldsSeparator').addEventListener('change', selectedFieldSeparator);
      document.getElementById('listAuthenticator').addEventListener('change', changeAuthenticationOption);

      function getIdentityFormatToken() {
          var selectAuthenticator ='${instance.selectAuthenticator}';
          var listAuthenticator = document.getElementById('listAuthenticator');

          for(var j=0;j &lt; listAuthenticator.length;j++)
          {
              if(listAuthenticator.options[j].value == selectAuthenticator )
              {
                  listAuthenticator.options[j].selected=true;
              }
          }
      }
      // Call the function initially to set the initial state based on checkbox
       getIdentityFormatToken();

        function changeAuthenticationOption()
        {
            var listAuthenticator = document.getElementById('listAuthenticator');
            var selectedAuthenticator = listAuthenticator.value;
            var optionText = listAuthenticator.options[listAuthenticator.selectedIndex].text;
            var conjurGlobalJWTSection = document.getElementById('conjurGlobalJWTSection');
            var conjurLocalAPIKeyCredentials = document.getElementById('conjurLocalAPIKeyCredentials');
            var conjurLocalTokenClaims = document.getElementById('conjurLocalTokenClaims');

            if( optionText === 'APIKey')
            {
                try {
                    conjurGlobalJWTSection.style.display = "none";
                    conjurLocalAPIKeyCredentials.style.display = "block";
                    conjurLocalTokenClaims.style.display = "none";
                    document.getElementById('jwtValidateButton').style.display = "none";
                }catch(err) {}
            }
            else if( optionText === 'JWT')
            {
                conjurGlobalJWTSection.style.display = "block";
                conjurLocalAPIKeyCredentials.style.display = "none";
                conjurLocalTokenClaims.style.display = "block";
                document.getElementById('jwtValidateButton').style.display = "none";
            }
        }

         changeAuthenticationOption();
  </script>

       <style type="text/css">
           .jenkins-select_input {
             color: black;
             font-weight: normal;
             border:2px solid var(--input-border);
             border-radius:6px;
             box-shadow:0 0 0 10px transparent;
             display: block;
             max-width: 100% !important;
             min-height: 38px;
             padding: 8px;
             transition: var(--standard-transition);
             width: 100% !important;
           }


   </style>
</j:jelly>
